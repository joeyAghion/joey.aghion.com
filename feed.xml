<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Half a Mind - Joey Aghion</title>
  <id>http://joey.aghion.com</id>
  <link href="http://joey.aghion.com"/>
  <link href="http://joey.aghion.com/feed.xml" rel="self"/>
  <updated>2014-06-09T21:52:00Z</updated>
  <author>
    <name>Joey Aghion</name>
  </author>
  <entry>
    <title>Unique Tabs v0.4 now available</title>
    <link rel="alternate" href="/unique-tabs-v0-4-now-available/"/>
    <id>/unique-tabs-v0-4-now-available/</id>
    <published>2014-06-09T21:52:00Z</published>
    <updated>2014-06-09T21:52:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Chrome&amp;#8217;s recent update removed the &lt;code&gt;webkitNotifications&lt;/code&gt; API, which broke Unique Tabs briefly. I&amp;#8217;ve just pushed version 0.4 of the extension. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;a href='https://chrome.google.com/webstore/detail/unique-tabs/cicbejncjmbkbahiicbiflndmhbcgibk'&gt;Add Unique Tabs from the Chrome web store&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Chrome&amp;#8217;s recent update removed the &lt;code&gt;webkitNotifications&lt;/code&gt; API, which broke Unique Tabs briefly. I&amp;#8217;ve just pushed version 0.4 of the extension. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;a href='https://chrome.google.com/webstore/detail/unique-tabs/cicbejncjmbkbahiicbiflndmhbcgibk'&gt;Add Unique Tabs from the Chrome web store&lt;/a&gt;&lt;/p&gt;
&lt;img alt='Unique Tabs screenshot' src='/images/2014-06-09-unique-tabs.png' /&gt;</content>
  </entry>
  <entry>
    <title>Mourning the Monolith</title>
    <link rel="alternate" href="/mourning-the-monolith/"/>
    <id>/mourning-the-monolith/</id>
    <published>2014-05-13T20:04:00Z</published>
    <updated>2014-05-13T20:04:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been carving a monolith into separate applications. It&amp;#8217;s an appropriate move at our scale and complexity, but not as easy a decision as some might believe. One casualty: the usefulness of our tests.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been carving a monolith into separate applications. It&amp;#8217;s an appropriate move at our scale and complexity, but not as easy a decision as some might believe. One casualty: the usefulness of our tests.&lt;/p&gt;

&lt;p&gt;Read on at the Artsy engineering blog: &lt;a href='http://artsy.github.io/blog/2014/05/12/continuous-integration-for-service-oriented-architectures/'&gt;Coninuous Integration for Service-Oriented Architectures&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Refactoring Infrastructure</title>
    <link rel="alternate" href="/refactoring-infrastructure/"/>
    <id>/refactoring-infrastructure/</id>
    <published>2014-04-10T23:48:00Z</published>
    <updated>2014-04-10T23:48:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Artsy has been growing its audience and scaling its systems. In the process, we&amp;#8217;ve been launching new services and extracting, migrating, or discarding existing ones. I wrote &lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Refactoring Infrastructure&lt;/a&gt; about how we&amp;#8217;ve done that with incremental improvements and minimal interruption.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Artsy has been growing its audience and scaling its systems. In the process, we&amp;#8217;ve been launching new services and extracting, migrating, or discarding existing ones. I wrote &lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Refactoring Infrastructure&lt;/a&gt; about how we&amp;#8217;ve done that with incremental improvements and minimal interruption.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Visit the Artsy engineering blog to continue reading&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Find the github pull request for a commit</title>
    <link rel="alternate" href="/find-the-github-pull-request-for-a-commit/"/>
    <id>/find-the-github-pull-request-for-a-commit/</id>
    <published>2014-02-19T16:21:00Z</published>
    <updated>2014-02-19T16:21:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Inspired by the post &lt;a href='http://mislav.uniqpath.com/2014/02/hidden-documentation/'&gt;Every line of code is always documented&lt;/a&gt;, I upgraded my development environment with a few new tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/cbumgard/GitCommitMsg'&gt;GitCommitMsg&lt;/a&gt; plug-in for Sublime Text - provides easy access to the entire commit history for selected lines.&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Inspired by the post &lt;a href='http://mislav.uniqpath.com/2014/02/hidden-documentation/'&gt;Every line of code is always documented&lt;/a&gt;, I upgraded my development environment with a few new tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/cbumgard/GitCommitMsg'&gt;GitCommitMsg&lt;/a&gt; plug-in for Sublime Text - provides easy access to the entire commit history for selected lines.&lt;/li&gt;

&lt;li&gt;The &lt;code&gt;pr_for_sha&lt;/code&gt; command below (stored in my ~/.bash_profile) - If you employ &lt;a href='http://scottchacon.com/2011/08/31/github-flow.html'&gt;github flow&lt;/a&gt;, this command pops open the github page for the pull request where a given commit originated:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
export GITHUB_UPSTREAM=artsy

function pr_for_sha {
  git log --merges --ancestry-path --oneline $1..master | grep 'pull request' | tail -n1 | awk '{print $5}' | cut -c2- | xargs -I % open https://github.com/$GITHUB_UPSTREAM/${PWD##*/}/pull/%
}
&lt;/pre&gt;
&lt;p&gt;Just update &lt;code&gt;GITHUB_UPSTREAM&lt;/code&gt; to match whatever you call your upstream repo (e.g., &lt;code&gt;upstream&lt;/code&gt; or &lt;code&gt;origin&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;And if you&amp;#8217;re not already using them, you should of course install these Sublime Text plug-ins (via &lt;a href='https://sublime.wbond.net/'&gt;Package Control&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/kemayo/sublime-text-git'&gt;Git&lt;/a&gt; - integrates the ever-useful &lt;strong&gt;Git Blame&lt;/strong&gt; command.&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.jisaacks.com/gitgutter'&gt;GitGutter&lt;/a&gt; - indicates added, removed, and modified lines right in your editor.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>New Artsy post: Isolating Spurious and Nondeterministic Tests</title>
    <link rel="alternate" href="/new-artsy-post-isolating-spurious-and-nondeterministic-tests/"/>
    <id>/new-artsy-post-isolating-spurious-and-nondeterministic-tests/</id>
    <published>2014-01-30T16:38:00Z</published>
    <updated>2014-01-30T16:38:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Solid tests are a great asset. Tests that fail spuriously are toxic; they threaten our ability to ship quickly and our confidence in the end product.&lt;/p&gt;

&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been experimenting with a test &amp;#8220;quarantine&amp;#8221;&amp;#8211;a suite of problematic tests that&amp;#8217;s isolated from the usual build pipeline and limited in size.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Solid tests are a great asset. Tests that fail spuriously are toxic; they threaten our ability to ship quickly and our confidence in the end product.&lt;/p&gt;

&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been experimenting with a test &amp;#8220;quarantine&amp;#8221;&amp;#8211;a suite of problematic tests that&amp;#8217;s isolated from the usual build pipeline and limited in size.&lt;/p&gt;

&lt;p&gt;Read more on the Artsy engineering blog: &lt;a href='http://artsy.github.io/blog/2014/01/30/isolating-spurious-and-nondeterministic-tests/'&gt;Isolating Spurious and Nondeterministic Tests&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Let console_color keep you out of trouble</title>
    <link rel="alternate" href="/let-console_color-keep-you-out-of-trouble/"/>
    <id>/let-console_color-keep-you-out-of-trouble/</id>
    <published>2013-11-22T14:38:00Z</published>
    <updated>2013-11-22T14:38:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Who hasn&amp;#8217;t mistakenly typed into a production Rails console thinking it was development?&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href='https://github.com/joeyAghion/console_color'&gt;console_color&lt;/a&gt;, so you&amp;#8217;re never unsure of your environment. To install, add &lt;code&gt;console_color&lt;/code&gt; to your Gemfile:&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Who hasn&amp;#8217;t mistakenly typed into a production Rails console thinking it was development?&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href='https://github.com/joeyAghion/console_color'&gt;console_color&lt;/a&gt;, so you&amp;#8217;re never unsure of your environment. To install, add &lt;code&gt;console_color&lt;/code&gt; to your Gemfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &amp;#39;console_color&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your console will look like:&lt;/p&gt;

&lt;p&gt;&lt;img alt='production console' src='http://f.cl.ly/items/3U2M3c1c230s0S2X3n22/Screen%20Shot%202013-11-22%20at%2012.06.43%20AM.png' /&gt;&lt;/p&gt;

&lt;p&gt;I.e., DANGER. Or:&lt;/p&gt;

&lt;p&gt;&lt;img alt='development console' src='http://f.cl.ly/items/3j1o3w3N1E382a211d1P/Screen%20Shot%202013-11-21%20at%2011.48.18%20PM.png' /&gt;&lt;/p&gt;

&lt;p&gt;Sure&amp;#8211;it&amp;#8217;s frivolous. But maybe it&amp;#8217;ll save you some trouble.&lt;/p&gt;

&lt;p&gt;&lt;a href='https://github.com/joeyAghion/console_color'&gt;Visit console_color on GitHub for more details.&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
</feed>
