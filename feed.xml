<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Half a Mind - Joey Aghion</title>
  <id>http://joey.aghion.com</id>
  <link href="http://joey.aghion.com"/>
  <link href="http://joey.aghion.com/feed.xml" rel="self"/>
  <updated>2014-04-10T23:48:00Z</updated>
  <author>
    <name>Joey Aghion</name>
  </author>
  <entry>
    <title>Refactoring Infrastructure</title>
    <link rel="alternate" href="/refactoring-infrastructure/"/>
    <id>/refactoring-infrastructure/</id>
    <published>2014-04-10T23:48:00Z</published>
    <updated>2014-04-10T23:48:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Artsy has been growing its audience and scaling its systems. In the process, we&amp;#8217;ve been launching new services and extracting, migrating, or discarding existing ones. I wrote &lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Refactoring Infrastructure&lt;/a&gt; about how we&amp;#8217;ve done that with incremental improvements and minimal interruption.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Artsy has been growing its audience and scaling its systems. In the process, we&amp;#8217;ve been launching new services and extracting, migrating, or discarding existing ones. I wrote &lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Refactoring Infrastructure&lt;/a&gt; about how we&amp;#8217;ve done that with incremental improvements and minimal interruption.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Visit the Artsy engineering blog to continue reading&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Find the github pull request for a commit</title>
    <link rel="alternate" href="/find-the-github-pull-request-for-a-commit/"/>
    <id>/find-the-github-pull-request-for-a-commit/</id>
    <published>2014-02-19T16:21:00Z</published>
    <updated>2014-02-19T16:21:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Inspired by the post &lt;a href='http://mislav.uniqpath.com/2014/02/hidden-documentation/'&gt;Every line of code is always documented&lt;/a&gt;, I upgraded my development environment with a few new tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/cbumgard/GitCommitMsg'&gt;GitCommitMsg&lt;/a&gt; plug-in for Sublime Text - provides easy access to the entire commit history for selected lines.&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Inspired by the post &lt;a href='http://mislav.uniqpath.com/2014/02/hidden-documentation/'&gt;Every line of code is always documented&lt;/a&gt;, I upgraded my development environment with a few new tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/cbumgard/GitCommitMsg'&gt;GitCommitMsg&lt;/a&gt; plug-in for Sublime Text - provides easy access to the entire commit history for selected lines.&lt;/li&gt;

&lt;li&gt;The &lt;code&gt;pr_for_sha&lt;/code&gt; command below (stored in my ~/.bash_profile) - If you employ &lt;a href='http://scottchacon.com/2011/08/31/github-flow.html'&gt;github flow&lt;/a&gt;, this command pops open the github page for the pull request where a given commit originated:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
export GITHUB_UPSTREAM=artsy

function pr_for_sha {
  git log --merges --ancestry-path --oneline $1..master | grep 'pull request' | tail -n1 | awk '{print $5}' | cut -c2- | xargs -I % open https://github.com/$GITHUB_UPSTREAM/${PWD##*/}/pull/%
}
&lt;/pre&gt;
&lt;p&gt;Just update &lt;code&gt;GITHUB_UPSTREAM&lt;/code&gt; to match whatever you call your upstream repo (e.g., &lt;code&gt;upstream&lt;/code&gt; or &lt;code&gt;origin&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;And if you&amp;#8217;re not already using them, you should of course install these Sublime Text plug-ins (via &lt;a href='https://sublime.wbond.net/'&gt;Package Control&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/kemayo/sublime-text-git'&gt;Git&lt;/a&gt; - integrates the ever-useful &lt;strong&gt;Git Blame&lt;/strong&gt; command.&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.jisaacks.com/gitgutter'&gt;GitGutter&lt;/a&gt; - indicates added, removed, and modified lines right in your editor.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>New Artsy post: Isolating Spurious and Nondeterministic Tests</title>
    <link rel="alternate" href="/new-artsy-post-isolating-spurious-and-nondeterministic-tests/"/>
    <id>/new-artsy-post-isolating-spurious-and-nondeterministic-tests/</id>
    <published>2014-01-30T16:38:00Z</published>
    <updated>2014-01-30T16:38:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Solid tests are a great asset. Tests that fail spuriously are toxic; they threaten our ability to ship quickly and our confidence in the end product.&lt;/p&gt;

&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been experimenting with a test &amp;#8220;quarantine&amp;#8221;&amp;#8211;a suite of problematic tests that&amp;#8217;s isolated from the usual build pipeline and limited in size.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Solid tests are a great asset. Tests that fail spuriously are toxic; they threaten our ability to ship quickly and our confidence in the end product.&lt;/p&gt;

&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been experimenting with a test &amp;#8220;quarantine&amp;#8221;&amp;#8211;a suite of problematic tests that&amp;#8217;s isolated from the usual build pipeline and limited in size.&lt;/p&gt;

&lt;p&gt;Read more on the Artsy engineering blog: &lt;a href='http://artsy.github.io/blog/2014/01/30/isolating-spurious-and-nondeterministic-tests/'&gt;Isolating Spurious and Nondeterministic Tests&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Let console_color keep you out of trouble</title>
    <link rel="alternate" href="/let-console_color-keep-you-out-of-trouble/"/>
    <id>/let-console_color-keep-you-out-of-trouble/</id>
    <published>2013-11-22T14:38:00Z</published>
    <updated>2013-11-22T14:38:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Who hasn&amp;#8217;t mistakenly typed into a production Rails console thinking it was development?&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href='https://github.com/joeyAghion/console_color'&gt;console_color&lt;/a&gt;, so you&amp;#8217;re never unsure of your environment. To install, add &lt;code&gt;console_color&lt;/code&gt; to your Gemfile:&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Who hasn&amp;#8217;t mistakenly typed into a production Rails console thinking it was development?&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href='https://github.com/joeyAghion/console_color'&gt;console_color&lt;/a&gt;, so you&amp;#8217;re never unsure of your environment. To install, add &lt;code&gt;console_color&lt;/code&gt; to your Gemfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &amp;#39;console_color&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your console will look like:&lt;/p&gt;

&lt;p&gt;&lt;img alt='production console' src='http://f.cl.ly/items/3U2M3c1c230s0S2X3n22/Screen%20Shot%202013-11-22%20at%2012.06.43%20AM.png' /&gt;&lt;/p&gt;

&lt;p&gt;I.e., DANGER. Or:&lt;/p&gt;

&lt;p&gt;&lt;img alt='development console' src='http://f.cl.ly/items/3j1o3w3N1E382a211d1P/Screen%20Shot%202013-11-21%20at%2011.48.18%20PM.png' /&gt;&lt;/p&gt;

&lt;p&gt;Sure&amp;#8211;it&amp;#8217;s frivolous. But maybe it&amp;#8217;ll save you some trouble.&lt;/p&gt;

&lt;p&gt;&lt;a href='https://github.com/joeyAghion/console_color'&gt;Visit console_color on GitHub for more details.&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Artsy's experiment with AWS OpsWorks</title>
    <link rel="alternate" href="/artsy-s-experiment-with-aws-opsworks/"/>
    <id>/artsy-s-experiment-with-aws-opsworks/</id>
    <published>2013-09-13T04:53:00Z</published>
    <updated>2013-09-13T04:53:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;After struggling to make Artsy&amp;#8217;s largest application work within &lt;a href='https://www.heroku.com/'&gt;Heroku&amp;#8217;s&lt;/a&gt; platform for a long while, I began a series of experiments with other providers. Recently, those experiments culminated in switching our application to &lt;a href='http://aws.amazon.com/opsworks/'&gt;AWS OpsWorks&lt;/a&gt;.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;After struggling to make Artsy&amp;#8217;s largest application work within &lt;a href='https://www.heroku.com/'&gt;Heroku&amp;#8217;s&lt;/a&gt; platform for a long while, I began a series of experiments with other providers. Recently, those experiments culminated in switching our application to &lt;a href='http://aws.amazon.com/opsworks/'&gt;AWS OpsWorks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OpsWorks offered us much more control, but balanced that with good automation and plenty of sane defaults. To help others up the learning curve I wrote an &lt;a href='http://artsy.github.io/blog/2013/08/27/introduction-to-aws-opsworks/'&gt;Introduction to AWS OpsWorks&lt;/a&gt; for the Artsy engineering blog.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OpsWorks is a new service from Amazon that promises to provide high-level tools to manage your EC2-based deployment&amp;#8230;. If you&amp;#8217;ve been straining at the limits of your Platform as a Service (PaaS) provider, or just wishing for more automation for your EC2 deployment, you may want to try it out too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We&amp;#8217;re all primarily developers, not system administrators. So over the next few months we&amp;#8217;ll be keeping a close watch on how much additional administrative overhead our new platform requires. So far, results have been very promising.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://artsy.github.io/blog/2013/08/27/introduction-to-aws-opsworks/'&gt;Continue reading&lt;/a&gt; or visit the &lt;a href='https://news.ycombinator.com/item?id=6297992'&gt;Hacker News comments&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Listing MongoDB collections by size</title>
    <link rel="alternate" href="/listing-mongodb-collections-by-size/"/>
    <id>/listing-mongodb-collections-by-size/</id>
    <published>2013-09-10T15:37:00Z</published>
    <updated>2013-09-10T15:37:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;In a MongoDB shell, the &lt;code&gt;db.stats()&lt;/code&gt; command shows you the amount of space occupied by the selected database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; db.stats()
{
  &amp;quot;db&amp;quot; : &amp;quot;my-db&amp;quot;,
  &amp;quot;collections&amp;quot; : 242,
  &amp;quot;dataSize&amp;quot; : 7167367172,&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;p&gt;In a MongoDB shell, the &lt;code&gt;db.stats()&lt;/code&gt; command shows you the amount of space occupied by the selected database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; db.stats()
{
  &amp;quot;db&amp;quot; : &amp;quot;my-db&amp;quot;,
  &amp;quot;collections&amp;quot; : 242,
  &amp;quot;dataSize&amp;quot; : 7167367172,
  &amp;quot;storageSize&amp;quot; : 7885074432,
   ...
  &amp;quot;fileSize&amp;quot; : 14958985216,
  &amp;quot;nsSizeMB&amp;quot; : 16,
  &amp;quot;ok&amp;quot; : 1
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;db.collection_name.stats()&lt;/code&gt; command returns similar metrics for an individual collection, but there&amp;#8217;s no convenient way to see how the overall metrics are broken down by collection.&lt;/p&gt;

&lt;h3 id='my_solution'&gt;My Solution&lt;/h3&gt;

&lt;p&gt;This javascript lists collections in descending order of size and can be executed directly in the mongo shell:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var collectionNames = db.getCollectionNames(), stats = [];
collectionNames.forEach(function (n) { stats.push(db[n].stats()); });
stats = stats.sort(function(a, b) { return b[&amp;#39;size&amp;#39;] - a[&amp;#39;size&amp;#39;]; });
for (var c in stats) { print(stats[c][&amp;#39;ns&amp;#39;] + &amp;quot;: &amp;quot; + stats[c][&amp;#39;size&amp;#39;] + &amp;quot; (&amp;quot; + stats[c][&amp;#39;storageSize&amp;#39;] + &amp;quot;)&amp;quot;); }&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, see the gist: &lt;a href='https://gist.github.com/joeyAghion/6511184'&gt;mongodb_collection_sizes.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Example output (first metric is &lt;code&gt;size&lt;/code&gt;, second is &lt;code&gt;storageSize&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my-db.foos: 5568196496 (7455608832)
my-db.bars: 716999376 (929259520)
...
my-db.bazs: 0 (8192)&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
</feed>
