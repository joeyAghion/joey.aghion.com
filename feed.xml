<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Half a Mind - Joey Aghion</title>
  <id>http://joey.aghion.com</id>
  <link href="http://joey.aghion.com"/>
  <link href="http://joey.aghion.com/feed.xml" rel="self"/>
  <updated>2014-09-16T23:45:00Z</updated>
  <author>
    <name>Joey Aghion</name>
  </author>
  <entry>
    <title>Setting up StatsD and Graphite</title>
    <link rel="alternate" href="/setting-up-statsd-and-graphite/"/>
    <id>/setting-up-statsd-and-graphite/</id>
    <published>2014-09-16T23:45:00Z</published>
    <updated>2014-09-16T23:45:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; depends on &lt;a href='https://github.com/etsy/statsd'&gt;statsd&lt;/a&gt; and &lt;a href='http://graphite.wikidot.com/'&gt;graphite&lt;/a&gt; every day. When our graphite server failed recently, I took the opportunity to revisit an &lt;a href='/tracking-application-metrics-with-statsd'&gt;old post&lt;/a&gt; about the simplest possible steps for setting up your own statsd and graphite server.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; depends on &lt;a href='https://github.com/etsy/statsd'&gt;statsd&lt;/a&gt; and &lt;a href='http://graphite.wikidot.com/'&gt;graphite&lt;/a&gt; every day. When our graphite server failed recently, I took the opportunity to revisit an &lt;a href='/tracking-application-metrics-with-statsd'&gt;old post&lt;/a&gt; about the simplest possible steps for setting up your own statsd and graphite server.&lt;/p&gt;

&lt;p&gt;It turns out, the tools have improved quite a bit since then. &lt;a href='https://coderwall.com/p/pb74zq'&gt;This post&lt;/a&gt; provided an outline in which you only need a Berksfile (to specify cookbooks) and a Vagrantfile (to drive the provisioning). Its settings and cookbooks were slightly out of date, so I made some modifications.&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Berksfile&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source &amp;quot;https://supermarket.getchef.com&amp;quot;

cookbook &amp;#39;apt&amp;#39;
cookbook &amp;#39;statsd&amp;#39;, git: &amp;#39;https://github.com/librato/statsd-cookbook.git&amp;#39;
cookbook &amp;#39;graphite&amp;#39;, git: &amp;#39;https://github.com/hectcastro/chef-graphite.git&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In &lt;em&gt;Vagrantfile&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;VAGRANTFILE_API_VERSION = &amp;quot;2&amp;quot;

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.omnibus.chef_version = :latest
  config.vm.box = &amp;quot;dummy&amp;quot;
  config.vm.box_url = &amp;quot;https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&amp;quot;
  
  # Provider
  config.vm.provider :aws do |aws, override|
    aws.access_key_id = &amp;#39;...YOUR AWS_ACCESS_KEY_ID...&amp;#39;
    aws.secret_access_key = &amp;#39;...YOUR AWS_SECRET_ACCESS_KEY...&amp;#39;
    aws.keypair_name = &amp;#39;your_keypair_name&amp;#39;
    aws.ami = &amp;quot;ami-d017b2b8&amp;quot; # Ubuntu 12.04.2 LTS us-east ebs-backed 64-bit (chef?)
    aws.region = &amp;quot;us-east-1&amp;quot;
    aws.instance_type = &amp;quot;m3.large&amp;quot;
    aws.security_groups = [&amp;quot;default&amp;quot;, &amp;quot;statsd_graphite&amp;quot;]
    override.ssh.username = &amp;quot;ubuntu&amp;quot;
    override.ssh.private_key_path = &amp;quot;/path/to/your/keypair.pem&amp;quot;
    aws.tags = {
      &amp;#39;Name&amp;#39; =&amp;gt; &amp;#39;Statsd (Vagrant Provision)&amp;#39;
    }

    # Mount a 50 GB root partition rather than run out of space on the default
    aws.block_device_mapping = [
      {
        &amp;#39;DeviceName&amp;#39; =&amp;gt; &amp;quot;/dev/sda1&amp;quot;,
        &amp;#39;VirtualName&amp;#39; =&amp;gt; &amp;quot;root&amp;quot;,
        &amp;#39;Ebs.VolumeSize&amp;#39; =&amp;gt; &amp;#39;50&amp;#39;
      }
    ]
  end

  # Provisioning
  config.berkshelf.enabled = true
  config.vm.provision :chef_solo do |chef|

    chef.add_recipe &amp;quot;apt&amp;quot;
    chef.add_recipe &amp;quot;statsd&amp;quot;
    chef.add_recipe &amp;quot;graphite&amp;quot;

    # We override the graphite cookbook&amp;#39;s default storage_aggregation and storage_schemas settings according to Etsy&amp;#39;s recommendations at https://github.com/etsy/statsd/blob/master/docs/graphite.md
    chef.json = {
      statsd: {
        legacyNamespace: false  # adopt new, preferred namespace scheme (all statsd metrics managed under &amp;quot;stats&amp;quot;)
      },
      graphite: {
        storage_aggregation: [
          {
            min: {
              pattern: &amp;quot;\\.lower$&amp;quot;,
              xFilesFactor: &amp;quot;0.1&amp;quot;,
              aggregationMethod: &amp;quot;min&amp;quot;
            }
          },
          {
            max: {
              pattern: &amp;quot;\\.upper(_\\d+)?$&amp;quot;,
              xFilesFactor: &amp;quot;0.1&amp;quot;,
              aggregationMethod: &amp;quot;max&amp;quot;
            }
          },
          {
            sum: {
              pattern: &amp;quot;\\.sum$&amp;quot;,
              xFilesFactor: &amp;quot;0&amp;quot;,
              aggregationMethod: &amp;quot;sum&amp;quot;
            }
          },
          {
            count: {
              pattern: &amp;quot;\\.count$&amp;quot;,
              xFilesFactor: &amp;quot;0&amp;quot;,
              aggregationMethod: &amp;quot;sum&amp;quot;
            }
          },
          {
            count_legacy: {
              pattern: &amp;quot;^stats_counts.*&amp;quot;,
              xFilesFactor: &amp;quot;0&amp;quot;,
              aggregationMethod: &amp;quot;sum&amp;quot;
            }
          },
          {
            default_average: {
              pattern: &amp;quot;.*&amp;quot;,
              xFilesFactor: &amp;quot;0.3&amp;quot;,
              aggregationMethod: &amp;quot;average&amp;quot;
            }
          }
        ],
        storage_schemas: [
          {
            stats: {
              priority: &amp;quot;100&amp;quot;,
              pattern: &amp;quot;^stats.*&amp;quot;,
              retentions: &amp;quot;10s:6h,1min:6d,10min:1800d&amp;quot;
            }
          },
          {
            catchall: {
              priority: &amp;quot;0&amp;quot;,
              pattern: &amp;quot;.*&amp;quot;,
              retentions: &amp;quot;60s:5y&amp;quot;
            }
          }
        ]
      }
    }
  end
end&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What you&amp;#8217;ll need to do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download and install &lt;a href='http://www.vagrantup.com/downloads.html'&gt;Vagrant&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Download and install &lt;a href='https://downloads.getchef.com/chef-dk'&gt;ChefDK&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Create an AWS keypair&lt;/li&gt;

&lt;li&gt;Create a &lt;code&gt;statsd_graphite&lt;/code&gt; AWS security group that allows SSH and HTTP access, as well as UDP access to port 8125 (for statsd)&lt;/li&gt;

&lt;li&gt;Update the &lt;code&gt;access_key_id&lt;/code&gt;, &lt;code&gt;secret_access_key&lt;/code&gt;, &lt;code&gt;keypair_name&lt;/code&gt;, and &lt;code&gt;private_key_path&lt;/code&gt; values in the Berksfile&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then, run the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant plugin install vagrant-berkshelf vagrant-omnibus vagrant-aws
vagrant up --provider aws&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Unique Tabs v0.4 now available</title>
    <link rel="alternate" href="/unique-tabs-v0-4-now-available/"/>
    <id>/unique-tabs-v0-4-now-available/</id>
    <published>2014-06-09T21:52:00Z</published>
    <updated>2014-06-09T21:52:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Chrome&amp;#8217;s recent update removed the &lt;code&gt;webkitNotifications&lt;/code&gt; API, which broke Unique Tabs briefly. I&amp;#8217;ve just pushed version 0.4 of the extension. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;a href='https://chrome.google.com/webstore/detail/unique-tabs/cicbejncjmbkbahiicbiflndmhbcgibk'&gt;Add Unique Tabs from the Chrome web store&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Chrome&amp;#8217;s recent update removed the &lt;code&gt;webkitNotifications&lt;/code&gt; API, which broke Unique Tabs briefly. I&amp;#8217;ve just pushed version 0.4 of the extension. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;a href='https://chrome.google.com/webstore/detail/unique-tabs/cicbejncjmbkbahiicbiflndmhbcgibk'&gt;Add Unique Tabs from the Chrome web store&lt;/a&gt;&lt;/p&gt;
&lt;img alt='Unique Tabs screenshot' src='/images/2014-06-09-unique-tabs.png' /&gt;</content>
  </entry>
  <entry>
    <title>Mourning the Monolith</title>
    <link rel="alternate" href="/mourning-the-monolith/"/>
    <id>/mourning-the-monolith/</id>
    <published>2014-05-13T20:04:00Z</published>
    <updated>2014-05-13T20:04:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been carving a monolith into separate applications. It&amp;#8217;s an appropriate move at our scale and complexity, but not as easy a decision as some might believe. One casualty: the usefulness of our tests.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been carving a monolith into separate applications. It&amp;#8217;s an appropriate move at our scale and complexity, but not as easy a decision as some might believe. One casualty: the usefulness of our tests.&lt;/p&gt;

&lt;p&gt;Read on at the Artsy engineering blog: &lt;a href='http://artsy.github.io/blog/2014/05/12/continuous-integration-for-service-oriented-architectures/'&gt;Coninuous Integration for Service-Oriented Architectures&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Refactoring Infrastructure</title>
    <link rel="alternate" href="/refactoring-infrastructure/"/>
    <id>/refactoring-infrastructure/</id>
    <published>2014-04-10T23:48:00Z</published>
    <updated>2014-04-10T23:48:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Artsy has been growing its audience and scaling its systems. In the process, we&amp;#8217;ve been launching new services and extracting, migrating, or discarding existing ones. I wrote &lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Refactoring Infrastructure&lt;/a&gt; about how we&amp;#8217;ve done that with incremental improvements and minimal interruption.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Artsy has been growing its audience and scaling its systems. In the process, we&amp;#8217;ve been launching new services and extracting, migrating, or discarding existing ones. I wrote &lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Refactoring Infrastructure&lt;/a&gt; about how we&amp;#8217;ve done that with incremental improvements and minimal interruption.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://artsy.github.io/blog/2014/04/02/refactoring-infrastructure/'&gt;Visit the Artsy engineering blog to continue reading&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Find the github pull request for a commit</title>
    <link rel="alternate" href="/find-the-github-pull-request-for-a-commit/"/>
    <id>/find-the-github-pull-request-for-a-commit/</id>
    <published>2014-02-19T16:21:00Z</published>
    <updated>2014-02-19T16:21:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Inspired by the post &lt;a href='http://mislav.uniqpath.com/2014/02/hidden-documentation/'&gt;Every line of code is always documented&lt;/a&gt;, I upgraded my development environment with a few new tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/cbumgard/GitCommitMsg'&gt;GitCommitMsg&lt;/a&gt; plug-in for Sublime Text - provides easy access to the entire commit history for selected lines.&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Inspired by the post &lt;a href='http://mislav.uniqpath.com/2014/02/hidden-documentation/'&gt;Every line of code is always documented&lt;/a&gt;, I upgraded my development environment with a few new tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/cbumgard/GitCommitMsg'&gt;GitCommitMsg&lt;/a&gt; plug-in for Sublime Text - provides easy access to the entire commit history for selected lines.&lt;/li&gt;

&lt;li&gt;The &lt;code&gt;pr_for_sha&lt;/code&gt; command below (stored in my ~/.bash_profile) - If you employ &lt;a href='http://scottchacon.com/2011/08/31/github-flow.html'&gt;github flow&lt;/a&gt;, this command pops open the github page for the pull request where a given commit originated:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
export GITHUB_UPSTREAM=artsy

function pr_for_sha {
  git log --merges --ancestry-path --oneline $1..master | grep 'pull request' | tail -n1 | awk '{print $5}' | cut -c2- | xargs -I % open https://github.com/$GITHUB_UPSTREAM/${PWD##*/}/pull/%
}
&lt;/pre&gt;
&lt;p&gt;Just update &lt;code&gt;GITHUB_UPSTREAM&lt;/code&gt; to match whatever you call your upstream repo (e.g., &lt;code&gt;upstream&lt;/code&gt; or &lt;code&gt;origin&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;And if you&amp;#8217;re not already using them, you should of course install these Sublime Text plug-ins (via &lt;a href='https://sublime.wbond.net/'&gt;Package Control&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/kemayo/sublime-text-git'&gt;Git&lt;/a&gt; - integrates the ever-useful &lt;strong&gt;Git Blame&lt;/strong&gt; command.&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.jisaacks.com/gitgutter'&gt;GitGutter&lt;/a&gt; - indicates added, removed, and modified lines right in your editor.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>New Artsy post: Isolating Spurious and Nondeterministic Tests</title>
    <link rel="alternate" href="/new-artsy-post-isolating-spurious-and-nondeterministic-tests/"/>
    <id>/new-artsy-post-isolating-spurious-and-nondeterministic-tests/</id>
    <published>2014-01-30T16:38:00Z</published>
    <updated>2014-01-30T16:38:00Z</updated>
    <author>
      <name>Joey Aghion</name>
    </author>
    <summary type="html">&lt;p&gt;Solid tests are a great asset. Tests that fail spuriously are toxic; they threaten our ability to ship quickly and our confidence in the end product.&lt;/p&gt;

&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been experimenting with a test &amp;#8220;quarantine&amp;#8221;&amp;#8211;a suite of problematic tests that&amp;#8217;s isolated from the usual build pipeline and limited in size.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Solid tests are a great asset. Tests that fail spuriously are toxic; they threaten our ability to ship quickly and our confidence in the end product.&lt;/p&gt;

&lt;p&gt;We at &lt;a href='https://artsy.net'&gt;Artsy&lt;/a&gt; have been experimenting with a test &amp;#8220;quarantine&amp;#8221;&amp;#8211;a suite of problematic tests that&amp;#8217;s isolated from the usual build pipeline and limited in size.&lt;/p&gt;

&lt;p&gt;Read more on the Artsy engineering blog: &lt;a href='http://artsy.github.io/blog/2014/01/30/isolating-spurious-and-nondeterministic-tests/'&gt;Isolating Spurious and Nondeterministic Tests&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
</feed>
